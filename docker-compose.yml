version: '3.8'

services:
  # Serviço para construir o JAR usando Maven e Java 17
  builder:
    image: maven:3.8.5-openjdk-17
    volumes:
      - ./target:/project/target
    working_dir: /project
    command: mvn clean package

  # Serviço da aplicação que irá executar o JAR
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./target:/app/target
    depends_on:
      - db  # Garante que o banco de dados esteja disponível antes de iniciar a aplicação
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/contabildb  # 'db' é o nome do serviço do banco
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 3012
      SPRING_JPA_HIBERNATE_DDL_AUTO: update  # (Pode ser 'none', 'update', 'create', etc.)
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect  # Dialeto MySQL 8

  # Serviço do banco de dados MySQL
  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: contabildb  # O nome do banco de dados
      MYSQL_USER: root
      MYSQL_PASSWORD: 3012
    volumes:
      - mysql-data:/var/lib/mysql  # Para persistir os dados do banco entre os reinícios dos containers

# Volumes para persistência de dados (se necessário)
volumes:
  mysql-data:
    driver: local
